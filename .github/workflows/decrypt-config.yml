# This workflow runs the Python script to fetch and decrypt configuration data.

name: Fetch and Generate Config

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
  schedule:
    - cron: '0 */6 * * *'  # Run every 6 hours

# Add permissions for GITHUB_TOKEN
permissions:
  contents: write
  actions: read

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      # Sets up Python
      - name: Set up Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: 3.9

      # Installs dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests cryptography python-dotenv

      # Create begz directory if it doesn't exist
      - name: Create begz directory
        run: mkdir -p begz

      # List files for debugging purposes to ensure the script is where we expect it
      - name: List files in workspace
        run: ls -R

      # Create .env file from secrets
      - name: Create .env file
        run: |
          cd begz
          echo "API_URL=${{ secrets.API_URL }}" > .env
          echo "DECRYPT_KEY=${{ secrets.DECRYPT_KEY }}" >> .env

      # Runs the Python script
      - name: Run decryption script
        run: |
          cd begz
          python decrypt_script.py
      
      # Commit and push configs.txt
      - name: Commit and push configs.txt
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "github-actions@github.com"
          git add begz/configs.txt
          
          # Check if there are changes to commit
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Automated update of configs.txt - $(date '+%Y-%m-%d %H:%M:%S UTC')"
            git push origin HEAD:main
          fi

      # Upload the generated artifact using the latest version
      - name: Upload configs.txt
        uses: actions/upload-artifact@v4
        with:
          name: config-decrypted
          path: begz/configs.txt