# This workflow runs two Python scripts: one to generate configs.json and another to decrypt and generate configs.txt.

name: Fetch, Generate, and Decrypt Configs

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
  schedule:
    - cron: '0 */6 * * *'  # Run every 6 hours

# Add permissions for GITHUB_TOKEN to allow committing back to the repo
permissions:
  contents: write
  actions: read

jobs:
  build-and-commit:
    runs-on: ubuntu-latest
    steps:
      # 1. Check-out your repository
      - name: Check-out repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      # 2. Set up Python environment
      - name: Set up Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: 3.9

      # 3. Install all required dependencies from both workflows
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests cryptography python-dotenv

      # 4. Create the 'begz' directory needed by the second script
      - name: Create begz directory
        run: mkdir -p begz
      
      # 5. List files for debugging
      - name: List files in workspace
        run: ls -R

      # 6. Run the first script (configs_gen.py)
      - name: Run generator script
        env:
          URL: ${{ secrets.URL }}
        run: python configs_gen.py

      # 7. Create the .env file for the decryption script
      - name: Create .env file for decryption
        run: |
          echo "API_URL=${{ secrets.API_URL }}" > begz/.env
          echo "DECRYPT_KEY=${{ secrets.DECRYPT_KEY }}" >> begz/.env
      
      # 8. Run the second script (decrypt_script.py)
      - name: Run decryption script
        run: |
          cd begz
          python decrypt_script.py
      
      # 9. Commit and push any changes from both scripts
      - name: Commit and push updated configs
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "github-actions@github.com"
          git add configs.json begz/configs.txt
          
          # Check if there are staged changes
          if git diff --staged --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Automated update of config files - $(date '+%Y-%m-%d %H:%M:%S UTC')"
            git push origin HEAD:main
          fi

      # 10. Upload the first generated file as an artifact
      - name: Upload configs.json
        uses: actions/upload-artifact@v4
        with:
          name: generated-config
          path: configs.json

      # 11. Upload the second generated file as an artifact
      - name: Upload configs.txt
        uses: actions/upload-artifact@v4
        with:
          name: decrypted-config
          path: begz/configs.txt