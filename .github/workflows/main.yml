# This workflow runs Python scripts and sets up the Xray binary for validation.

name: Decrypt and Generate Configs

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
  schedule:
    - cron: '*/15 * * * *'  # Run every 1 hour

permissions:
  contents: write
  actions: read

jobs:
  build-and-commit:
    runs-on: ubuntu-latest
    steps:
      - name: Check-out repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests cryptography python-dotenv pycountry

      # Step 4: Download and Set Up Xray-core
      - name: Download and Set Up Xray-core
        run: |
          if [ "${{ runner.arch }}" == "X64" ]; then
            XRAY_ARCH="linux-64"
          elif [ "${{ runner.arch }}" == "ARM64" ]; then
            XRAY_ARCH="linux-arm64-v8a"
          else
            echo "Unsupported architecture: ${{ runner.arch }}"
            exit 1
          fi
          
          XRAY_VERSION="v25.7.26"
          XRAY_URL="https://github.com/XTLS/Xray-core/releases/download/${XRAY_VERSION}/Xray-${XRAY_ARCH}.zip"
          
          echo "Downloading Xray from $XRAY_URL"
          curl -L -o xray.zip "$XRAY_URL"
          unzip -o xray.zip xray
          chmod +x xray
          echo "$(pwd)" >> $GITHUB_PATH
          ./xray version

      # Step 4b: Download and Set Up xray-checker
      - name: Download and Set Up xray-checker
        run: |
          if [ "${{ runner.arch }}" == "X64" ]; then
            CHECKER_URL="https://github.com/kutovoys/xray-checker/releases/download/v0.4.3/xray-checker-v0.4.3-linux-amd64.tar.gz"
          elif [ "${{ runner.arch }}" == "ARM64" ]; then
            CHECKER_URL="https://github.com/kutovoys/xray-checker/releases/download/v0.4.3/xray-checker-v0.4.3-linux-arm64.tar.gz"
          else
            echo "Unsupported architecture: ${{ runner.arch }}"
            exit 1
          fi

          echo "Downloading xray-checker from $CHECKER_URL"
          curl -L -o checker.tar.gz "$CHECKER_URL"
          tar -xzvf checker.tar.gz
          chmod +x xray-checker
          echo "$(pwd)" >> $GITHUB_PATH
          ./xray-checker --help || true  # Prevents failure if it exits non-zero

      - name: Create begz directory
        run: mkdir -p begz

      - name: List files in workspace
        run: ls -R

      - name: Create .env file for decryption
        run: |
          echo "API_URL=${{ secrets.API_URL }}" > begz/.env
          echo "DECRYPT_KEY=${{ secrets.DECRYPT_KEY }}" >> begz/.env

      - name: Run decryption script
        run: |
          cd begz
          python decrypt_script.py

      - name: Run generator script
        env:
          URL: ${{ secrets.URL }}
        run: |
          cd nb
          python configs_gen.py

      - name: Create .env file for yebe
        run: |
          echo "BASE_URL=${{ secrets.BASE_URL }}" > yebe/.env
          echo "GGITHUB_API_URL=${{ secrets.GGITHUB_API_URL }}" >> yebe/.env

      # - name: Run yebe script
      #   run: |
      #     cd yebe
      #     python generate_yebe_configs.py

      - name: Run ala script
        run: |
          cd ala
          python configs_gen.py

      - name: Merge all configs
        run: python merge_configs.py

      - name: Commit and push updated configs
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "github-actions@github.com"
          git add configs.json config.json begz/config.json
          if git diff --staged --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Automated update of config files - $(date '+%Y-%m-%d %H:%M:%S UTC')"
            git push origin HEAD:main
          fi

      - name: Upload configs.json
        uses: actions/upload-artifact@v4
        with:
          name: generated-config
          path: configs.json

      - name: Upload config.json
        uses: actions/upload-artifact@v4
        with:
          name: additional-config
          path: config.json
